swagger: '2.0'
info:
  version: 1.0.0
  title: Event Booking API
  description: This API allows customers to create, find and reserve tickets for events, view and manage their reservations, and be notified before the event kickoff.
host: localhost:3000
schemes:
  - http
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
paths:
  /users:
    post:
      summary: Create a new user.
      description: This endpoint allows customers to create a new user.
      parameters:
        - in: body
          name: user
          description: The user to create.
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: Created
        '400':
          description: Bad request
      tags:
        - users
  /auth:
    post:
      summary: Authenticate a user.
      description: This endpoint allows users to authenticate and receive a Bearer token.
      parameters:
        - in: body
          name: credentials
          description: The user's credentials.
          schema:
            $ref: '#/definitions/Credentials'
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              type: string
        '401':
          description: Unauthorized
      tags:
        - users
  /events:
    post:
      summary: Create a new event.
      description: This endpoint allows customers to create a new event.
      parameters:
        - in: body
          name: event
          description: The event to create.
          schema:
            $ref: '#/definitions/EventRequestDTO'
      responses:
        '201':
          description: Created
          schema:
            type: object
            properties:
              eventId:
                type: integer
                format: int64
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      tags:
        - events
      security:
        - Bearer: []
    get:
      summary: Get all events or search for events.
      description: This endpoint allows customers to retrieve all events or search for events by name, date range or category.
      parameters:
        - in: query
          name: name
          description: The name of the event to search for.
          type: string
        - in: query
          name: startDate
          description: The start date of the date range to search for events in (inclusive).
          type: string
          format: date
        - in: query
          name: endDate
          description: The end date of the date range to search for events in (inclusive).
          type: string
          format: date
        - in: query
          name: category
          description: The category of the event to search for.
          type: string
          enum:
            - Concert 
            - Conference 
            - Game
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/EventResponseDTO'
        '404':
          description: Not found
      tags:
        - events
  /events/{eventId}/tickets:
    post:
      summary: Reserve tickets for an event.
      description: This endpoint allows customers to reserve tickets for an event.
      parameters:
        - in: path
          name: eventId
          description: The ID of the event to reserve tickets for.
          required: true
          type: integer
          format: int64
        - in: body
          name: ticketRequest
          description: The ticket reservation request.
          schema:
            $ref: '#/definitions/TicketRequest'
      responses:
        '201':
          description: Created
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      tags:
        - tickets
      security:
        - Bearer: []
  /reservations:
    get:
      summary: View your booked events.
      description: This endpoint allows customers to view their booked events.
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ReservationResponseDTO'
        '401':
          description: Unauthorized
      tags:
        - reservations
      security:
        - Bearer: []
  /reservations/{reservationId}:
    delete:
      summary: Cancel a reservation.
      description: This endpoint allows customers to cancel their reservations.
      parameters:
        - in: path
          name: reservationId
          description: The ID of the reservation to cancel.
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      tags:
        - reservations
      security:
        - Bearer: []
  /notifications:
    post:
      summary: Schedule a notification.
      description: This endpoint allows scheduling a notification for an event.
      parameters:
        - in: body
          name: notificationSchedule
          description: The notification schedule details.
          schema:
            $ref: '#/definitions/NotificationScheduleRequestDTO'
      responses:
        '201':
          description: Created
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      tags:
        - notifications
      security:
        - Bearer: []
  /notifications/{eventId}/logs:
    get:
      summary: Get notification logs for an event.
      description: This endpoint retrieves the logs of notifications sent for a specific event.
      parameters:
        - in: path
          name: eventId
          description: The ID of the event to get logs for.
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/NotificationLogResponseDTO'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      tags:
        - notifications
      security:
        - Bearer: []
  /notifications/{eventId}/scheduled:
    get:
      summary: Get scheduled notifications for an event.
      description: This endpoint retrieves the scheduled notifications for a specific event.
      parameters:
        - in: path
          name: eventId
          description: The ID of the event to get scheduled notifications for.
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/NotificationScheduleResponseDTO'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      tags:
        - notifications
      security:
        - Bearer: []
definitions:
  User:
    type: object
    required:
      - name
      - email
      - password
    properties:
      name:
        type: string
        maxLength: 100
      email:
        type: string
        format: email
      password:
        type: string
        minLength: 8
  Credentials:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        format: email
      password:
        type: string
        minLength: 8
  EventRequestDTO:
    type: object
    required:
      - name
      - date
      - availableAttendeesCount
      - description
      - category
    properties:
      name:
        type: string
        maxLength: 100
      date:
        type: string
        format: date
      availableAttendeesCount:
        type: integer
        minimum: 1
        maximum: 1000
      description:
        type: string
        maxLength: 500
      category:
        $ref: '#/definitions/Category'
  EventResponseDTO:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      date:
        type: string
        format: date
      availableAttendeesCount:
        type: integer
      description:
        type: string
      category:
        $ref: '#/definitions/Category'
  TicketRequest:
    type: object
    required:
      - attendeesCount
    properties:
      attendeesCount:
        type: integer
        minimum: 1
  ReservationResponseDTO:
    type: object
    properties:
      id:
        type: integer
        format: int64
      event:
        $ref: '#/definitions/EventResponseDTO'
      attendeesCount:
        type: integer
      user:
        $ref: '#/definitions/User'
  Category:
    type: string
    enum:
      - Concert 
      - Conference 
      - Game
  NotificationScheduleRequestDTO:
    type: object
    required:
      - eventId
      - message
      - date
      - status
    properties:
      eventId:
        type: integer
      message:
        type: string
        maxLength: 500
      date:
        type: string
        format: date-time
      status:
        type: string
        enum:
          - scheduled
          - sent
          - failed
  NotificationScheduleResponseDTO:
    type: object
    properties:
      id:
        type: integer
      eventId:
        type: integer
      message:
        type: string
      date:
        type: string
        format: date-time
      status:
        type: string
  NotificationLogResponseDTO:
    type: object
    properties:
      id:
        type: integer
      userId:
        type: integer
      eventId:
        type: integer
      message:
        type: string
      createdAt:
        type: string
        format: date-time
